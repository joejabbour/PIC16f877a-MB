Microchip MPLAB XC8 Compiler V2.20

Linker command line:

-W-3 --edf=/opt/microchip/xc8/v2.20/pic/dat/en_msgs.txt -cn \
  -h+dist/default/debug/PIC16f877a-MB.X.debug.sym \
  --cmf=dist/default/debug/PIC16f877a-MB.X.debug.cmf -z -Q16F877A \
  -o/tmp/xcXPcMGhm --defsym=__MPLAB_BUILD=1 \
  -Mdist/default/debug/PIC16f877a-MB.X.debug.map -E1 -ver=XC8 Compiler \
  --acfsm=1493 -ASTACK=0110h-016Fh -pstack=STACK -ACODE=00h-07FFhx4 \
  -ASTRCODE=00h-01FFFh -ASTRING=00h-0FFhx32 -ACONST=00h-0FFhx32 \
  -AENTRY=00h-0FFhx32 -ACOMMON=070h-07Fh -ABANK0=020h-06Fh \
  -ABANK1=0A0h-0EFh -ABANK2=0110h-016Fh -ABANK3=0190h-01EFh \
  -ARAM=020h-06Fh,0A0h-0EFh,0110h-016Fh,0190h-01EFh \
  -AABS1=020h-07Fh,0A0h-0EFh,0110h-016Fh,0190h-01EFh -ASFR0=00h-01Fh \
  -ASFR1=080h-09Fh -ASFR2=0100h-010Fh -ASFR3=0180h-018Fh \
  -ACONFIG=02007h-02007h -DCONFIG=2 -AIDLOC=02000h-02003h -DIDLOC=2 \
  -preset_vec=00h,intentry=04h,init,end_init -ppowerup=CODE -pcinit=CODE \
  -pfunctab=ENTRY -AEEDATA=00h-0FFh/02100h -peeprom_data=EEDATA -DEEDATA=2 \
  -DCODE=2 -DSTRCODE=2 -DSTRING=2 -DCONST=2 -DENTRY=2 -k /tmp/xcXlcdlLb.o \
  dist/default/debug/PIC16f877a-MB.X.debug.o 

Object code version is 3.11

Machine type is 16F877A



                Name                               Link     Load   Length Selector   Space Scale
/tmp/xcXlcdlLb.o
                end_init                             12       12        3        8       0
                reset_vec                             0        0        3        0       0
                config                             2007     2007        1        0       4
dist/default/debug/PIC16f877a-MB.X.debug.o
                cinit                                15       15       15        8       0
                intentry                              4        4        E        8       0
                config                             2007     2007        1        0       4
                text11                              EE0      EE0       35     1DC0       0
                text10                              E39      E39        6     1C72       0
                text9                               F15      F15       4E     1E2A       0
                text8                               78C      78C       67        8       0
                text7                               7F3      7F3        C        8       0
                text6                               E64      E64       22     1CC8       0
                text5                               E86      E86       2D     1D0C       0
                text4                                2A       2A      689        8       0
                text3                               EB3      EB3       2D     1D66       0
                text2                               F63      F63       9D     1EC6       0
                text1                               6B3      6B3       D9        8       0
                maintext                            E47      E47       1D     1C8E       0
                cstackBANK0                          20       20       40       20       1
                cstackCOMMON                         70       70        E       70       1
                cstackBANK1                          CA       CA       21       A0       1
                clrtext                             E3F      E3F        8     1C7E       0
                bssBANK1                             A0       A0       2A       A0       1
                bssBANK0                             60       60       10       20       1
                strings                             800      800        7     1000       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                end_init                             12       12        3         0
                cinit                                15       15       15         0
                intentry                              4        4        E         0
                reset_vec                             0        0        3         0
                text11                              EE0      EE0       35         0
                text10                              E39      E39        6         0
                text9                               F15      F15       4E         0
                text8                               78C      78C       67         0
                text7                               7F3      7F3        C         0
                text6                               E64      E64       22         0
                text5                               E86      E86       2D         0
                text4                                2A       2A      689         0
                text3                               EB3      EB3       2D         0
                text2                               F63      F63       9D         0
                text1                               6B3      6B3       D9         0
                maintext                            E47      E47       1D         0
                clrtext                             E3F      E3F        8         0

        CLASS   STRCODE        

        CLASS   STRING         
                strings                             800      800        7         0

        CLASS   CONST          

        CLASS   ENTRY          

        CLASS   COMMON         
                cstackCOMMON                         70       70        E         1

        CLASS   BANK0          
                cstackBANK0                          20       20       40         1
                bssBANK0                             60       60       10         1

        CLASS   BANK1          
                cstackBANK1                          CA       CA       21         1
                bssBANK1                             A0       A0       2A         1

        CLASS   BANK2          

        CLASS   BANK3          

        CLASS   RAM            

        CLASS   ABS1           
                abs_s1                               7E       7E        2         1

        CLASS   SFR0           

        CLASS   SFR1           

        CLASS   SFR2           

        CLASS   SFR3           

        CLASS   CONFIG         
                config                             2007     2007        1         4

        CLASS   IDLOC          

        CLASS   EEDATA         



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class     Delta

                text11                         000EE0  000035  000F15      1DC0       0  CODE        2
                text6                          000E64  000022  000E86      1CC8       0  CODE        2
                text5                          000E86  00002D  000EB3      1D0C       0  CODE        2
                text3                          000EB3  00002D  000EE0      1D66       0  CODE        2
                text9                          000F15  00004E  000F63      1E2A       0  CODE        2
                text2                          000F63  00009D  001000      1EC6       0  CODE        2
                reset_vec                      000000  000003  000003         0       0  CODE        2
                maintext                       000E47  00001D  000E64      1C8E       0  CODE        2
                strings                        000800  000007  000807      1000       0  STRING      2
                text10                         000E39  000006  000E3F      1C72       0  CODE        2
                clrtext                        000E3F  000008  000E47      1C7E       0  CODE        2
                bssBANK1                       0000A0  00004B  0000EB        A0       1  BANK1       1
                cstackBANK0                    000020  000050  000070        20       1  BANK0       1
                intentry                       000004  0007FB  0007FF         8       0  CODE        2
                cstackCOMMON                   000070  00000E  00007E        70       1  COMMON      1


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK1            00EB-00EF              5           1
        BANK2            0110-016F             60           1
        BANK3            0190-01EF             60           1
        CODE             0003-0003              1           2
                         07FF-07FF              1
                         0807-0E38            632
                         1000-1FFF            800
        CONST            0003-0003              1           2
                         07FF-07FF              1
                         0807-0E38            100
                         1000-1FFF            100
        EEDATA           2100-21FF            100           2
        ENTRY            0003-0003              1           2
                         07FF-07FF              1
                         0807-0E38            100
                         1000-1FFF            100
        IDLOC            2000-2003              4           2
        RAM              00EB-00EF              5           1
                         0110-016F             60
                         0190-01EF             60
        SFR0             0000-001F             20           1
        SFR1             0080-009F             20           1
        SFR2             0100-010F             10           1
        SFR3             0180-018F             10           1
        STACK            0110-016F             60           1
        STRCODE          0003-0003              1           2
                         07FF-07FF              1
                         0807-0E38            632
                         1000-1FFF           1000
        STRING           0003-0003              1           2
                         07FF-07FF              1
                         0807-0E38            100
                         1000-1FFF            100

                                  Symbol Table

?_CRC16                       cstackCOMMON 0070
?___aldiv                     cstackBANK1  00CA
CRC16@PDU                     cstackCOMMON 0079
CRC16@count                   cstackCOMMON 0070
CRC16@i                       cstackCOMMON 0075
CRC16@j                       cstackCOMMON 0077
CRC16@reg_crc                 cstackCOMMON 007A
_BRGH                         (abs)        04C2
_CRC                          bssBANK0     0060
_CRC16                        text8        078C
_CREN                         (abs)        00C4
_Coils                        bssBANK1     00A0
_DiscreteInputs               bssBANK1     00B0
_HoldingRegisters             bssBANK1     00C0
_INTCONbits                   (abs)        000B
_InputRegisters               bssBANK1     00C6
_OPTION_REGbits               (abs)        0081
_PDU                          bssBANK0     0066
_PIE1bits                     (abs)        008C
_RCIF                         (abs)        0065
_RCREG                        (abs)        001A
_RCSTAbits                    (abs)        0018
_RX9                          (abs)        00C6
_SPBRG                        (abs)        0099
_SPEN                         (abs)        00C7
_SYNC                         (abs)        04C4
_TMR0                         (abs)        0001
_TRISC6                       (abs)        043E
_TRISC7                       (abs)        043F
_TRISD                        (abs)        0088
_TRMT                         (abs)        04C1
_TXEN                         (abs)        04C5
_TXREG                        (abs)        0019
__Habs1                       abs1         0000
__Hbank0                      bank0        0000
__Hbank1                      bank1        0000
__Hbank2                      bank2        0000
__Hbank3                      bank3        0000
__HbssBANK0                   bssBANK0     0000
__HbssBANK1                   bssBANK1     0000
__Hcinit                      cinit        002A
__Hclrtext                    clrtext      0000
__Hcode                       code         0000
__Hcommon                     common       0000
__Hconfig                     config       2008
__HcstackBANK0                cstackBANK0  0000
__HcstackBANK1                cstackBANK1  0000
__HcstackCOMMON               cstackCOMMON 0000
__Heeprom_data                eeprom_data  0000
__Hend_init                   end_init     0015
__Hfunctab                    functab      0000
__Hinit                       init         0012
__Hintentry                   intentry     0012
__Hmaintext                   maintext     0000
__Hpowerup                    powerup      0000
__Hram                        ram          0000
__Hreset_vec                  reset_vec    0003
__Hsfr0                       sfr0         0000
__Hsfr1                       sfr1         0000
__Hsfr2                       sfr2         0000
__Hsfr3                       sfr3         0000
__Hspace_0                    (abs)        1000
__Hspace_1                    (abs)        00EB
__Hspace_2                    (abs)        0000
__Hspace_3                    (abs)        0000
__Hspace_4                    (abs)        400F
__Hstack                      stack        0000
__Hstrings                    strings      0000
__Htext                       text         0000
__Labs1                       abs1         0000
__Lbank0                      bank0        0000
__Lbank1                      bank1        0000
__Lbank2                      bank2        0000
__Lbank3                      bank3        0000
__LbssBANK0                   bssBANK0     0000
__LbssBANK1                   bssBANK1     0000
__Lcinit                      cinit        0015
__Lclrtext                    clrtext      0000
__Lcode                       code         0000
__Lcommon                     common       0000
__Lconfig                     config       0000
__LcstackBANK0                cstackBANK0  0000
__LcstackBANK1                cstackBANK1  0000
__LcstackCOMMON               cstackCOMMON 0000
__Leeprom_data                eeprom_data  0000
__Lend_init                   end_init     0012
__Lfunctab                    functab      0000
__Linit                       init         0012
__Lintentry                   intentry     0004
__Lmaintext                   maintext     0000
__Lpowerup                    powerup      0000
__Lram                        ram          0000
__Lreset_vec                  reset_vec    0000
__Lsfr0                       sfr0         0000
__Lsfr1                       sfr1         0000
__Lsfr2                       sfr2         0000
__Lsfr3                       sfr3         0000
__Lspace_0                    (abs)        0000
__Lspace_1                    (abs)        0000
__Lspace_2                    (abs)        0000
__Lspace_3                    (abs)        0000
__Lspace_4                    (abs)        0000
__Lstack                      stack        0000
__Lstrings                    strings      0000
__Ltext                       text         0000
__S0                          (abs)        1000
__S1                          (abs)        00EB
__S2                          (abs)        0000
__S3                          (abs)        0000
___aldiv                      text2        0F63
___aldiv@counter              cstackBANK1  00D3
___aldiv@dividend             cstackBANK1  00CE
___aldiv@divisor              cstackBANK1  00CA
___aldiv@quotient             cstackBANK1  00D5
___aldiv@sign                 cstackBANK1  00D4
___int_sp                     stack        0000
___latbits                    (abs)        0002
___sp                         stack        0000
___stackhi                    (abs)        0000
___stacklo                    (abs)        0000
__end_of_CRC16                text8        07F3
__end_of___aldiv              text2        1000
__end_of__initialization      cinit        0026
__end_of__stringtab           strings      0806
__end_of_address              strings      0807
__end_of_even_parity          text11       0F15
__end_of_getPDU               text9        0F63
__end_of_main                 maintext     0E64
__end_of_myISR                text3        0EE0
__end_of_processPDU           text4        06B3
__end_of_sendexception        text5        0EB3
__end_of_uart_dataready       text10       0E3F
__end_of_uart_init            text1        078C
__end_of_uart_write           text7        07FF
__end_of_writePDU             text6        0E86
__initialization              cinit        0015
__pbssBANK0                   bssBANK0     0060
__pbssBANK1                   bssBANK1     00A0
__pcstackBANK0                cstackBANK0  0020
__pcstackBANK1                cstackBANK1  00CA
__pcstackCOMMON               cstackCOMMON 0070
__pintentry                   intentry     0004
__pmaintext                   maintext     0E47
__pstrings                    strings      0800
__ptext1                      text1        06B3
__ptext10                     text10       0E39
__ptext11                     text11       0EE0
__ptext2                      text2        0F63
__ptext3                      text3        0EB3
__ptext4                      text4        002A
__ptext5                      text5        0E86
__ptext6                      text6        0E64
__ptext7                      text7        07F3
__ptext8                      text8        078C
__ptext9                      text9        0F15
__size_of_CRC16               (abs)        0000
__size_of___aldiv             (abs)        0000
__size_of_even_parity         (abs)        0000
__size_of_getPDU              (abs)        0000
__size_of_main                (abs)        0000
__size_of_myISR               (abs)        0000
__size_of_processPDU          (abs)        0000
__size_of_sendexception       (abs)        0000
__size_of_uart_dataready      (abs)        0000
__size_of_uart_init           (abs)        0000
__size_of_uart_write          (abs)        0000
__size_of_writePDU            (abs)        0000
__stringbase                  strings      0805
__stringtab                   strings      0800
_checksum                     bssBANK0     0062
_count                        bssBANK0     0065
_even_parity                  text11       0EE0
_getPDU                       text9        0F15
_main                         maintext     0E47
_myISR                        text3        0EB3
_processPDU                   text4        002A
_sendexception                text5        0E86
_status                       bssBANK0     0064
_uart_dataready               text10       0E39
_uart_init                    text1        06B3
_uart_write                   text7        07F3
_writePDU                     text6        0E64
btemp                         (abs)        007E
clear_ram0                    clrtext      0E3F
end_of_initialization         cinit        0026
even_parity@chbyte            cstackCOMMON 0071
even_parity@i                 cstackCOMMON 0072
even_parity@parity            cstackCOMMON 0074
even_parity@tool              cstackCOMMON 0075
getPDU@i                      cstackCOMMON 0077
getPDU@nineth                 cstackCOMMON 0076
interrupt_function            intentry     0004
intlevel0                     functab      0000
intlevel1                     functab      0000
intlevel2                     functab      0000
intlevel3                     functab      0000
intlevel4                     functab      0000
intlevel5                     functab      0000
processPDU@buff               cstackBANK0  0055
processPDU@buff_247           cstackBANK0  0056
processPDU@coilbytescount     cstackBANK0  0053
processPDU@coilbytescount_245 cstackBANK0  0054
processPDU@coilcount          cstackBANK0  0057
processPDU@coilcount_243      cstackBANK0  0059
processPDU@coilsleft          cstackBANK0  0030
processPDU@coilsleft_246      cstackBANK0  0031
processPDU@count              cstackBANK0  0032
processPDU@i                  cstackBANK0  0035
processPDU@i_239              cstackBANK0  0026
processPDU@i_241              cstackBANK0  0028
processPDU@i_244              cstackBANK0  003B
processPDU@i_248              cstackBANK0  002A
processPDU@i_250              cstackBANK0  002C
processPDU@i_253              cstackBANK0  0041
processPDU@i_254              cstackBANK0  0043
processPDU@i_257              cstackBANK0  0047
processPDU@i_258              cstackBANK0  0049
processPDU@index              cstackBANK0  005B
processPDU@j                  cstackBANK0  0037
processPDU@j_249              cstackBANK0  003D
processPDU@reg                cstackBANK0  0033
processPDU@reg_242            cstackBANK0  0039
processPDU@regadd             cstackBANK0  003F
processPDU@regadd_255         cstackBANK0  0045
processPDU@regadd_259         cstackBANK0  004B
processPDU@regadd_261         cstackBANK0  002E
processPDU@regcount           cstackBANK0  004D
processPDU@regcount_256       cstackBANK0  004F
processPDU@valueint           cstackBANK0  0051
processPDU@valueint_262       cstackBANK0  0024
reset_vec                     reset_vec    0000
saved_w                       (abs)        007E
sendexception@errorcode       cstackCOMMON 007C
sendexception@functioncode    cstackCOMMON 007D
start                         init         0012
start_initialization          cinit        0015
uart_init@baudrate            cstackBANK1  00D9
uart_init@x                   cstackBANK1  00E9
uart_write@data               cstackCOMMON 0070
writePDU@count                cstackCOMMON 0072
writePDU@i                    cstackCOMMON 0073
wtemp0                        (abs)        007E


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 420 in file "newmain.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels required when called:    7
 This function calls:
		_uart_init
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _uart_init *****************
 Defined at:
		line 18 in file "./uart.h"
 Parameters:    Size  Location     Type
  baudrate        4   15[BANK1 ] const long 
 Auto vars:     Size  Location     Type
  x               2   31[BANK1 ] unsigned int 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       4       0       0
      Locals:         0       0       2       0       0
      Temps:          0       0      12       0       0
      Totals:         0       0      18       0       0
Total ram usage:       18 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		___aldiv
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function ___aldiv *****************
 Defined at:
		line 5 in file "/opt/microchip/xc8/v2.20/pic/sources/c90/common/aldiv.c"
 Parameters:    Size  Location     Type
  divisor         4    0[BANK1 ] long 
  dividend        4    4[BANK1 ] long 
 Auto vars:     Size  Location     Type
  quotient        4   11[BANK1 ] long 
  sign            1   10[BANK1 ] unsigned char 
  counter         1    9[BANK1 ] unsigned char 
 Return value:  Size  Location     Type
                  4    0[BANK1 ] long 
 Registers used:
		wreg, status,2, status,0, btemp+1
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       8       0       0
      Locals:         0       0       6       0       0
      Temps:          0       0       1       0       0
      Totals:         0       0      15       0       0
Total ram usage:       15 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		Nothing
 This function is called by:
		_uart_init
 This function uses a non-reentrant model


 *************** function _myISR *****************
 Defined at:
		line 403 in file "newmain.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       4       0       0       0
      Totals:         0       4       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_getPDU
		_processPDU
 This function is called by:
		Interrupt level 1
 This function uses a non-reentrant model


 *************** function _processPDU *****************
 Defined at:
		line 104 in file "newmain.c"
 Parameters:    Size  Location     Type
  count           1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  count           1   18[BANK0 ] unsigned char 
  j               2   29[BANK0 ] int 
  j               2   23[BANK0 ] int 
  i               2   12[BANK0 ] int 
  i               2    8[BANK0 ] int 
  i               2   41[BANK0 ] int 
  i               2   39[BANK0 ] int 
  i               2   35[BANK0 ] int 
  i               2   33[BANK0 ] int 
  i               2   10[BANK0 ] int 
  i               2   27[BANK0 ] int 
  i               2    6[BANK0 ] int 
  i               2   21[BANK0 ] int 
  regadd          2   14[BANK0 ] unsigned int 
  valueint        2    4[BANK0 ] unsigned int 
  valueint        2   49[BANK0 ] unsigned int 
  regadd          2   43[BANK0 ] unsigned int 
  regcount        2   47[BANK0 ] unsigned int 
  regadd          2   37[BANK0 ] unsigned int 
  regcount        2   45[BANK0 ] unsigned int 
  regadd          2   31[BANK0 ] unsigned int 
  coilcount       2   57[BANK0 ] unsigned int 
  reg             2   25[BANK0 ] unsigned int 
  buff            1   54[BANK0 ] unsigned char 
  coilbytescou    1   52[BANK0 ] unsigned char 
  coilsleft       1   17[BANK0 ] unsigned char 
  coilcount       2   55[BANK0 ] unsigned int 
  reg             2   19[BANK0 ] unsigned int 
  buff            1   53[BANK0 ] unsigned char 
  coilbytescou    1   51[BANK0 ] unsigned char 
  coilsleft       1   16[BANK0 ] unsigned char 
  index           1   59[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0      56       0       0       0
      Temps:          0       4       0       0       0
      Totals:         0      60       0       0       0
Total ram usage:       60 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_CRC16
		_sendexception
		_writePDU
 This function is called by:
		_myISR
 This function uses a non-reentrant model


 *************** function _sendexception *****************
 Defined at:
		line 56 in file "newmain.c"
 Parameters:    Size  Location     Type
  functioncode    1    wreg     unsigned char 
  errorcode       1   12[COMMON] unsigned char 
 Auto vars:     Size  Location     Type
  functioncode    1   13[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         1       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         2       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_CRC16
		_writePDU
 This function is called by:
		_processPDU
 This function uses a non-reentrant model


 *************** function _writePDU *****************
 Defined at:
		line 50 in file "newmain.c"
 Parameters:    Size  Location     Type
  count           1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  count           1    2[COMMON] unsigned char 
  i               2    3[COMMON] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         3       0       0       0       0
      Temps:          1       0       0       0       0
      Totals:         4       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_uart_write
 This function is called by:
		_sendexception
		_processPDU
 This function uses a non-reentrant model


 *************** function _uart_write *****************
 Defined at:
		line 46 in file "./uart.h"
 Parameters:    Size  Location     Type
  data            1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  data            1    0[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         1       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_writePDU
		_uart_writetext
 This function uses a non-reentrant model


 *************** function _CRC16 *****************
 Defined at:
		line 14 in file "./CRC16.h"
 Parameters:    Size  Location     Type
  PDU             1    wreg     PTR unsigned char 
		 -> PDU(10), 
  count           1    0[COMMON] unsigned char 
 Auto vars:     Size  Location     Type
  PDU             1    9[COMMON] PTR unsigned char 
		 -> PDU(10), 
  j               2    7[COMMON] int 
  i               2    5[COMMON] int 
  reg_crc         2   10[COMMON] unsigned int 
 Return value:  Size  Location     Type
                  2    0[COMMON] unsigned int 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         2       0       0       0       0
      Locals:         7       0       0       0       0
      Temps:          3       0       0       0       0
      Totals:        12       0       0       0       0
Total ram usage:       12 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_sendexception
		_processPDU
 This function uses a non-reentrant model


 *************** function _getPDU *****************
 Defined at:
		line 67 in file "newmain.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  i               1    7[COMMON] unsigned char 
  nineth          1    6[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         2       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         2       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_even_parity
		_uart_dataready
 This function is called by:
		_myISR
 This function uses a non-reentrant model


 *************** function _uart_dataready *****************
 Defined at:
		line 64 in file "./uart.h"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_getPDU
 This function uses a non-reentrant model


 *************** function _even_parity *****************
 Defined at:
		line 81 in file "./uart.h"
 Parameters:    Size  Location     Type
  chbyte          1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  chbyte          1    1[COMMON] unsigned char 
  i               2    2[COMMON] int 
  tool            1    5[COMMON] unsigned char 
  parity          1    4[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0, btemp+1
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         5       0       0       0       0
      Temps:          1       0       0       0       0
      Totals:         6       0       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_getPDU
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
/opt/microchip/xc8/v2.20/pic/sources/c90/common/aldiv.c
		___aldiv       		CODE           	0F63	0000	158

/opt/microchip/xc8/v2.20/pic/sources/c90/common/aldiv.c estimated size: 158

newmain.c
		_processPDU    		CODE           	002A	0000	1674
		_getPDU        		CODE           	0F15	0000	79
		_myISR         		CODE           	0EB3	0000	46
		_main          		CODE           	0E47	0000	30
		_sendexception 		CODE           	0E86	0000	46
		_writePDU      		CODE           	0E64	0000	35

newmain.c estimated size: 1910

./uart.h
		_uart_write    		CODE           	07F3	0000	13
		_uart_dataready		CODE           	0E39	0000	7
		_even_parity   		CODE           	0EE0	0000	54
		_uart_init     		CODE           	06B3	0000	218

./uart.h estimated size: 292

./CRC16.h
		_CRC16         		CODE           	078C	0000	104

./CRC16.h estimated size: 104

shared
		__stringtab    		STRING         	0800	0000	7
		_address       		STRING         	0000	0000	0
		__initialization		CODE           	0015	0000	18

shared estimated size: 25

